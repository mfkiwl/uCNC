; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
include_dir=uCNC
src_dir=uCNC

[env:uno]
platform = atmelavr
board = uno
framework = arduino
build_src_filter = +<*>-<src/tinyusb>
build_flags = -D BOARD=BOARD_UNO -ffunction-sections -fdata-sections -mcall-prologues -mrelax -flto -fno-fat-lto-objects -fno-tree-scev-cprop -Wl,--gc-sections -Wl,--relax
extra_scripts = avr_compiler.py

[env:x_controller]
platform = atmelavr
board = uno
framework = arduino
build_src_filter = +<*>-<src/tinyusb>
build_flags = -D BOARD=BOARD_X_CONTROLLER -ffunction-sections -fdata-sections -mcall-prologues -mrelax -flto -fno-fat-lto-objects -fno-tree-scev-cprop -Wl,--gc-sections -Wl,--relax
extra_scripts = avr_compiler.py

[env:mks_dlc]
platform = atmelavr
board = uno
board_build.f_cpu = 20000000UL
framework = arduino
build_src_filter = +<*>-<src/tinyusb>
build_flags = -D BOARD=BOARD_MKS_DLC -ffunction-sections -fdata-sections -mcall-prologues -mrelax -flto -fno-fat-lto-objects -fno-tree-scev-cprop -Wl,--gc-sections -Wl,--relax
extra_scripts = avr_compiler.py

[env:ramps14]
platform = atmelavr
board = megaatmega2560
framework = arduino
build_src_filter = +<*>-<src/tinyusb>
build_flags = -D BOARD=BOARD_RAMPS14 -ffunction-sections -fdata-sections -mcall-prologues -mrelax -flto -fno-fat-lto-objects -fno-tree-scev-cprop -Wl,--gc-sections -Wl,--relax
extra_scripts = avr_compiler.py

[env:ramps14mirror]
platform = atmelavr
board = megaatmega2560
framework = arduino
build_src_filter = +<*>-<src/tinyusb>
build_flags = -D BOARD=BOARD_RAMPS14_MIRROR -ffunction-sections -fdata-sections -mcall-prologues -mrelax -flto -fno-fat-lto-objects -fno-tree-scev-cprop -Wl,--gc-sections -Wl,--relax
extra_scripts = avr_compiler.py

[env:mks_gen_l_v1]
platform = atmelavr
board = megaatmega2560
framework = arduino
build_src_filter = +<*>-<src/tinyusb>
build_flags = -D BOARD=BOARD_MKS_GEN_L_V1 -ffunction-sections -fdata-sections -mcall-prologues -mrelax -flto -fno-fat-lto-objects -fno-tree-scev-cprop -Wl,--gc-sections -Wl,--relax
extra_scripts = avr_compiler.py

[env:rambo]
platform = atmelavr
board = megaatmega2560
framework = arduino
build_src_filter = +<*>-<src/tinyusb>
build_flags = -D BOARD=BOARD_RAMBO14 -ffunction-sections -fdata-sections -mcall-prologues -mrelax -flto -fno-fat-lto-objects -fno-tree-scev-cprop -Wl,--gc-sections -Wl,--relax
extra_scripts = avr_compiler.py

[env:zeroUSB]
platform = atmelsam
board = zeroUSB
framework = arduino
build_flags = -D BOARD=BOARD_MZERO -D INTERFACE=1 -fdata-sections -ffunction-sections -nostdlib -fno-exceptions -Wl,--gc-sections

[env:bluepill_f103c8]
platform = ststm32
board = bluepill_f103c8
framework = arduino
build_flags = -D BOARD=BOARD_BLUEPILL -D INTERFACE=1 -D HAL_TIM_MODULE_DISABLED -D HAL_EXTI_MODULE_DISABLED -fdata-sections -ffunction-sections -Wl,--gc-sections
;uncomment if it's a bluepill clone
;upload_flags = -c set CPUTAPID 0x2ba01477

[env:blackpill_f401cc]
platform = ststm32
board = blackpill_f401cc
framework = arduino
build_flags = -D BOARD=BOARD_BLACKPILL -D INTERFACE=1 -D HAL_TIM_MODULE_DISABLED -D HAL_EXTI_MODULE_DISABLED -fdata-sections -ffunction-sections -Wl,--gc-sections

[env:d1]
platform = espressif8266@2.2.0
platform_packages = toolchain-xtensa@2.40802.200502
framework = arduino
board = d1
build_src_filter = 
	+<*>
	-<src/tinyusb>
	+<../webui/esp3d>
lib_deps = 
    tzapu/WiFiManager
	links2004/WebSockets
monitor_speed = 115200
monitor_filters = colorize
; set frequency to 160MHz
board_build.f_cpu = 160000000L
; set frequency to 40MHz
board_build.f_flash = 40000000L
board_build.flash_mode = dout
upload_resetmethod = nodemcu
upload_speed = 250000
build_flags = 
	-Wl,-Teagle.flash.4m2m.ld
    -D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
    -DNONOSDK221=1
    -DNDEBUG
    -DVTABLES_IN_FLASH
	-I include -D BOARD=BOARD_WEMOS_D1 -D ENABLE_WIFI -D INTERFACE=0 -fdata-sections -ffunction-sections -Wl,--gc-sections
